/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/vue-currency-input@1.22.6/dist/vue-currency-input.umd.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
/**
 * Vue Currency Input 1.22.6
 * (c) 2018-2021 Matthias Stiller
 * @license MIT
 */
!function (t, i) { "object" == typeof exports && "undefined" != typeof module ? i(exports) : "function" == typeof define && define.amd ? define(["exports"], i) : i((t = "undefined" != typeof globalThis ? globalThis : t || self).VueCurrencyInput = {}) }(this, (function (t) { "use strict"; var i = function (t) { return t.replace(/[.*+?^${}()|[\]\\]/g, "\\$&") }, e = function (t) { return t.replace(/^0+(0$|[^0])/, "$1") }, n = function (t, e) { return (t.match(new RegExp(i(e), "g")) || []).length }, r = function (t, i) { return t.substring(0, i.length) === i }, o = function (t, i) { return t.substring(0, t.indexOf(i)) }, s = [",", ".", "٫"], a = function (t) { var i = t.currency, e = t.locale, r = t.precision, s = t.autoDecimalMode, a = t.valueAsInteger, u = new Intl.NumberFormat(e, "string" == typeof i ? { currency: i, style: "currency" } : { minimumFractionDigits: 1 }), c = u.format(123456); this.locale = e, this.currency = i, this.digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((function (t) { return t.toLocaleString(e) })), this.decimalSymbol = n(c, this.digits[0]) ? c.substr(c.indexOf(this.digits[6]) + 1, 1) : void 0, this.groupingSymbol = c.substr(c.indexOf(this.digits[3]) + 1, 1), this.minusSymbol = o(Number(-1).toLocaleString(e), this.digits[1]), void 0 === this.decimalSymbol ? this.minimumFractionDigits = this.maximumFractionDigits = 0 : "number" == typeof r ? this.minimumFractionDigits = this.maximumFractionDigits = r : "object" != typeof r || s || a ? "string" == typeof i ? (this.minimumFractionDigits = u.resolvedOptions().minimumFractionDigits, this.maximumFractionDigits = u.resolvedOptions().maximumFractionDigits) : this.minimumFractionDigits = this.maximumFractionDigits = 2 : (this.minimumFractionDigits = r.min || 0, this.maximumFractionDigits = void 0 !== r.max ? r.max : 20), "string" == typeof i ? (this.prefix = o(c, this.digits[1]), this.negativePrefix = o(u.format(-1), this.digits[1]), this.suffix = c.substring(c.lastIndexOf(this.decimalSymbol ? this.digits[0] : this.digits[6]) + 1)) : (this.prefix = (i || {}).prefix || "", this.negativePrefix = "" + this.minusSymbol + this.prefix, this.suffix = (i || {}).suffix || "") }; a.prototype.parse = function (t, e) { if (void 0 === e && (e = !1), t) { var n = this.isNegative(t); t = this.normalizeDigits(t), t = this.stripCurrencySymbol(t), t = this.stripMinusSymbol(t); var r = this.decimalSymbol ? "(?:" + i(this.decimalSymbol) + "(\\d*))?" : "", o = this.stripGroupingSymbol(t).match(new RegExp("^(0|[1-9]\\d*)" + r + "$")); if (o && this.isValidIntegerFormat(t.split(this.decimalSymbol)[0], Number(o[1]))) { var s = Number((n ? "-" : "") + o[1] + "." + (o[2] || "")); return e ? Number(s.toFixed(this.maximumFractionDigits).split(".").join("")) : s } } return null }, a.prototype.isValidIntegerFormat = function (t, i) { var e = "string" == typeof this.currency ? { style: "currency", currency: this.currency, minimumFractionDigits: 0 } : {}; return [this.stripCurrencySymbol(this.normalizeDigits(i.toLocaleString(this.locale, Object.assign({}, e, { useGrouping: !0 })))), this.stripCurrencySymbol(this.normalizeDigits(i.toLocaleString(this.locale, Object.assign({}, e, { useGrouping: !1 }))))].includes(t) }, a.prototype.format = function (t, i) { return void 0 === i && (i = { minimumFractionDigits: this.minimumFractionDigits, maximumFractionDigits: this.maximumFractionDigits }), "string" == typeof this.currency ? t.toLocaleString(this.locale, Object.assign({}, { style: "currency", currency: this.currency }, i)) : this.insertCurrencySymbol(Math.abs(t).toLocaleString(this.locale, i), t < 0 || 0 === t && 1 / t < 0) }, a.prototype.toFraction = function (t) { return "" + this.digits[0] + this.decimalSymbol + this.onlyLocaleDigits(t.substr(1)).substr(0, this.maximumFractionDigits) }, a.prototype.isFractionIncomplete = function (t) { return !!this.normalizeDigits(this.stripGroupingSymbol(t)).match(new RegExp("^(0|[1-9]\\d*)" + i(this.decimalSymbol) + "$")) }, a.prototype.isNegative = function (t) { return r(t, this.negativePrefix) || r(t.replace("-", this.minusSymbol), this.minusSymbol) }, a.prototype.insertCurrencySymbol = function (t, i) { return "" + (i ? this.negativePrefix : this.prefix) + t + this.suffix }, a.prototype.stripGroupingSymbol = function (t) { return t.replace(new RegExp(i(this.groupingSymbol), "g"), "") }, a.prototype.stripMinusSymbol = function (t) { return t.replace("-", this.minusSymbol).replace(this.minusSymbol, "") }, a.prototype.stripCurrencySymbol = function (t) { return t.replace(this.negativePrefix, "").replace(this.prefix, "").replace(this.suffix, "") }, a.prototype.normalizeDecimalSymbol = function (t, i) { var e = this; return s.forEach((function (n) { t = t.substr(0, i) + t.substr(i).replace(n, e.decimalSymbol) })), t }, a.prototype.normalizeDigits = function (t) { return "0" !== this.digits[0] && this.digits.forEach((function (i, e) { t = t.replace(new RegExp(i, "g"), e) })), t }, a.prototype.onlyDigits = function (t) { return this.normalizeDigits(t).replace(/\D+/g, "") }, a.prototype.onlyLocaleDigits = function (t) { return t.replace(new RegExp("[^" + this.digits.join("") + "]*", "g"), "") }; var u = { locale: void 0, currency: "EUR", valueAsInteger: !1, distractionFree: !0, precision: void 0, autoDecimalMode: !1, valueRange: void 0, allowNegative: !0 }, c = function (t, i) { var e = Object.assign({}, u, i); return new a(e).parse(t, e.valueAsInteger) }, l = function (t) { return (t.$el || t).$ci.getValue() }, m = function (t, i) { (t.$el || t).$ci.setValue(i) }, h = function (t, i) { if (t === i) return !0; if (!t || !i || "object" != typeof t || "object" != typeof i) return !1; var e = Object.keys(t); return e.length === Object.keys(i).length && (!!e.every(Object.prototype.hasOwnProperty.bind(i)) && e.every((function (e) { return h(t[e], i[e]) }))) }, p = function (t) { this.numberFormat = t }; p.prototype.conformToMask = function (t, i) { var n = this; void 0 === i && (i = ""); var o = this.numberFormat.isNegative(t), s = t; s = this.numberFormat.stripCurrencySymbol(s); var a = function (t) { if ("" === t && o && i !== n.numberFormat.negativePrefix) return ""; if (n.numberFormat.maximumFractionDigits > 0) { if (n.numberFormat.isFractionIncomplete(t)) return t; if (r(t, n.numberFormat.decimalSymbol)) return n.numberFormat.toFraction(t) } return null }(s = this.numberFormat.stripMinusSymbol(s)); if (null != a) return this.numberFormat.insertCurrencySymbol(a, o); var u = s.split(this.numberFormat.decimalSymbol), c = u[0], l = u.slice(1), m = e(this.numberFormat.onlyDigits(c)), h = this.numberFormat.onlyDigits(l.join("")).substr(0, this.numberFormat.maximumFractionDigits), p = l.length > 0 && 0 === h.length, g = "" === m && o && (i === t.slice(0, -1) || i !== this.numberFormat.negativePrefix); return p || g ? i : m.match(/\d+/) ? { numberValue: Number((o ? "-" : "") + m + "." + h), fractionDigits: h } : "" }; var g = function (t) { this.numberFormat = t }; g.prototype.conformToMask = function (t) { if ("" === t) return ""; var i = this.numberFormat.isNegative(t), n = "" === this.numberFormat.stripMinusSymbol(t) ? -0 : Number((i ? "-" : "") + e(this.numberFormat.onlyDigits(t))) / Math.pow(10, this.numberFormat.minimumFractionDigits); return { numberValue: n, fractionDigits: n.toFixed(this.numberFormat.minimumFractionDigits).slice(-this.numberFormat.minimumFractionDigits) } }; var f = Math.pow(2, 53) - 1, y = function (t, i, e) { this.el = t, this.callbackFns = e, this.numberValue = null, this.addEventListener(), this.init(i), this.setValue(this.currencyFormat.parse(this.el.value)) }; y.prototype.init = function (t) { var i = Object.assign({}, t), e = i.distractionFree, n = i.autoDecimalMode, r = i.valueRange; "boolean" == typeof e && (i.distractionFree = { hideCurrencySymbol: e, hideNegligibleDecimalDigits: e, hideGroupingSymbol: e }), i.valueRange = r ? { min: void 0 !== r.min ? Math.max(r.min, -f) : -f, max: void 0 !== r.max ? Math.min(r.max, f) : f } : { min: -f, max: f }, n ? (i.distractionFree.hideNegligibleDecimalDigits = !1, this.el.setAttribute("inputmode", "numeric")) : this.el.setAttribute("inputmode", "decimal"), this.options = i, this.currencyFormat = new a(this.options), this.numberMask = i.autoDecimalMode ? new g(this.currencyFormat) : new p(this.currencyFormat) }, y.prototype.setOptions = function (t) { this.init(t), this.applyFixedFractionFormat(this.numberValue, !0) }, y.prototype.applyFixedFractionFormat = function (t, i) { this.format(null != t ? this.currencyFormat.format(this.validateValueRange(t)) : null), (t !== this.numberValue || i) && this.callbackFns.onChange(this.getValue()) }, y.prototype.getValue = function () { return this.currencyFormat.parse(this.formattedValue, this.options.valueAsInteger) }, y.prototype.setValue = function (t) { var i = this.options.valueAsInteger && null != t ? t / Math.pow(10, this.currencyFormat.maximumFractionDigits) : t; i !== this.numberValue && this.applyFixedFractionFormat(i) }, y.prototype.validateValueRange = function (t) { var i = this.options.valueRange, e = i.min, n = i.max; return Math.min(Math.max(t, e), n) }, y.prototype.updateInputValue = function (t, i) { if (void 0 === i && (i = !1), null != t) { void 0 !== this.decimalSymbolInsertedAt && (t = this.currencyFormat.normalizeDecimalSymbol(t, this.decimalSymbolInsertedAt), this.decimalSymbolInsertedAt = void 0); var e, n = this.numberMask.conformToMask(t, this.formattedValue); if ("object" == typeof n) { var r = n.numberValue, o = n.fractionDigits, s = this.currencyFormat, a = s.maximumFractionDigits, u = s.minimumFractionDigits; this.focus && (u = a), u = i ? o.replace(/0+$/, "").length : Math.min(u, o.length), e = r > f ? this.formattedValue : this.currencyFormat.format(r, { useGrouping: !(this.focus && this.options.distractionFree.hideGroupingSymbol), minimumFractionDigits: u, maximumFractionDigits: a }) } else e = n; this.options.allowNegative || (e = e.replace(this.currencyFormat.negativePrefix, this.currencyFormat.prefix)), this.focus && this.options.distractionFree.hideCurrencySymbol && (e = e.replace(this.currencyFormat.negativePrefix, this.currencyFormat.minusSymbol).replace(this.currencyFormat.prefix, "").replace(this.currencyFormat.suffix, "")), this.el.value = e, this.numberValue = this.currencyFormat.parse(e) } else this.el.value = this.numberValue = null; this.formattedValue = this.el.value }, y.prototype.format = function (t) { this.updateInputValue(t), this.callbackFns.onInput(this.getValue()) }, y.prototype.addEventListener = function () { var t = this; this.el.addEventListener("input", (function () { var i, e, r, o, s, a, u, c, l, m, h, p, g = t.el, f = g.value, y = g.selectionStart; t.format(f), t.focus && t.setCaretPosition((i = t.formattedValue, e = f, r = y, o = t.currencyFormat, s = t.options, a = o.prefix, u = o.suffix, c = o.decimalSymbol, l = o.maximumFractionDigits, m = o.groupingSymbol, h = e.indexOf(c) + 1, p = e.length - r, Math.abs(i.length - e.length) > 1 && r <= h ? i.indexOf(c) + 1 : i.substr(r, 1) === m && n(i, m) === n(e, m) + 1 ? i.length - p - 1 : (!s.autoDecimalMode && 0 !== h && r > h && o.onlyDigits(e.substr(h)).length - 1 === l && (p -= 1), s.distractionFree.hideCurrencySymbol ? i.length - p : Math.max(i.length - Math.max(p, u.length), 0 === a.length ? 0 : a.length + 1)))) }), { capture: !0 }), this.el.addEventListener("focus", (function () { t.focus = !0; var i = t.options.distractionFree, e = i.hideCurrencySymbol, r = i.hideGroupingSymbol, o = i.hideNegligibleDecimalDigits; (e || r || o) && setTimeout((function () { var i = t.el, e = i.value, r = i.selectionStart, s = i.selectionEnd; e && t.updateInputValue(t.el.value, o), Math.abs(r - s) > 0 ? t.setCaretPosition(0, t.el.value.length) : t.setCaretPosition(function (t, i, e, r) { var o = r; return i.distractionFree.hideCurrencySymbol && (o -= t.prefix.length), i.distractionFree.hideGroupingSymbol && (o -= n(e.substring(0, r), t.groupingSymbol)), Math.max(0, o) }(t.currencyFormat, t.options, e, r)) })) })), this.el.addEventListener("keypress", (function (i) { s.includes(i.key) && (t.decimalSymbolInsertedAt = t.el.selectionStart) })), this.el.addEventListener("blur", (function () { t.focus = !1, null != t.numberValue && t.applyFixedFractionFormat(t.numberValue) })), this.el.addEventListener("change", (function () { t.callbackFns.onChange(t.getValue()) })) }, y.prototype.setCaretPosition = function (t, i) { void 0 === i && (i = t), this.el.setSelectionRange(t, i) }; var d = { bind: function (t, i, e) { var n = i.value, r = "input" === t.tagName.toLowerCase() ? t : t.querySelector("input"); if (!r) throw new Error("No input element found"); var o = Object.assign({}, u, (e.context.$ci || {}).globalOptions, n), s = e.data && e.data.on || e.componentOptions && e.componentOptions.listeners || {}, a = function (t, i) { s[t] && s[t](e.componentOptions ? i : { target: { value: i } }) }; t.$ci = new y(r, o, { onChange: function () { a("change", r.value) }, onInput: function () { a("input", r.value) } }) }, componentUpdated: function (t, i) { var e = i.value, n = i.oldValue; h(e, n) || t.$ci.setOptions(e) } }, b = { render: function (t) { var i = this; return t("input", { directives: [{ name: "currency", value: this.options }], on: Object.assign({}, this.$listeners, { change: function () { i.$emit("change", l(i.$el)) }, input: function () { var t = l(i.$el); i.value !== t && i.$emit("input", t) } }) }) }, directives: { currency: d }, name: "CurrencyInput", props: { value: { type: Number, default: null }, locale: { type: String, default: void 0 }, currency: { type: [String, Object], default: void 0 }, distractionFree: { type: [Boolean, Object], default: void 0 }, precision: { type: [Number, Object], default: void 0 }, autoDecimalMode: { type: Boolean, default: void 0 }, valueAsInteger: { type: Boolean, default: void 0 }, valueRange: { type: Object, default: void 0 }, allowNegative: { type: Boolean, default: void 0 } }, mounted: function () { this.setValue(this.value) }, computed: { options: function () { var t = this, i = Object.assign({}, u, (this.$ci || {}).globalOptions); return Object.keys(u).forEach((function (e) { void 0 !== t[e] && (i[e] = t[e]) })), i } }, watch: { value: "setValue" }, methods: { setValue: function (t) { m(this.$el, t) } } }, v = { install: function (t, i) { void 0 === i && (i = {}); var e = i.componentName; void 0 === e && (e = b.name); var n = i.directiveName; void 0 === n && (n = "currency"); var r = i.globalOptions; void 0 === r && (r = {}), t.component(e, b), t.directive(n, d), t.prototype.$ci = { parse: function (t, i) { return c(t, Object.assign({}, r, i)) }, getValue: l, setValue: m, globalOptions: r } } }; "undefined" != typeof window && window.Vue && window.Vue.use(v), t.CurrencyDirective = d, t.CurrencyInput = b, t.default = v, t.getValue = l, t.parse = c, t.setValue = m, Object.defineProperty(t, "__esModule", { value: !0 }) }));
//# sourceMappingURL=/sm/69fdad255da62813eb8230eb28080d98430e4f8a0b6bb28861f0afe6a5bdefee.map